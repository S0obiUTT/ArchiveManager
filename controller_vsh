#!/bin/bash

#########################################
#										#
#	@Author : Kevin Personnic			#
#	@Date   : 17/05/2014				#
#	@Synop  : Controller vsh			#
#										#
#########################################

#communication const messages
declare -r archNotFound="ARCHNOTFOUND"
declare -r dirNotFound="DIRNOTFOUND"
declare -r dirFound="DIRFOUND"

#keywords
declare -r directoryKey="directory"

#environment variables
declare -r archivesDir="archives"


#check if a given directory exist
function vsh_existDir {
	#clean path of begining / and finishing /
	cleanPath="$(sed -e 's/\(^\/\|\/$\)//g' <<< $1)"

	# if directory is found in the archive
	if (( $(grep -c "^directory\ $cleanPath$" "$archivePath") == 0 )); then
		echo "0"
	else
		echo "1"
	fi
}

#check if a given archive exist
function vsh_existArch {
	found="0"

	for file in $archivesDir/*
	do
		if [[ -n $(sed -e 's/^archives\///g' <<< $file | grep \^$1\$) ]]; then
			found="1"
		fi
	done

	echo "$found"
}

#list the file of a directory
function vsh_ls {
	echo "command ls"
}

#move to an other directory
function vsh_cd {
	path="${cmdLineArray[3]}"

	if (( $(vsh_existDir $path) )); then
		echo "$dirNotFound"
	else
		echo "$dirFound"
	fi
}

#list the available archives
function vsh_list {

	for file in $archivesDir/*
	do
		echo "$(sed -e 's/^archives\///g' <<< $file)"
	done
}

function vsh_cat {
	true;
}

function vsh_rm {
	true;
}

function vsh_browse {
	cmd="${cmdLineArray[2]}"

	#check if the archive exist
	if ! (( $(vsh_existArch ${cmdLineArray[1]}) )); then
		echo "$archNotFound"
		return
	fi

	case "$cmd" in
		ls )
			vsh_ls;
			;;
		cd )
			vsh_cd;
			;;
		cat )
			vsh_cat;
			;;
		rm )
			vsh_rm;
			;;
		*)
			;;
	esac
}

function vsh_extract {
	#check if the archive exist
	if ! (( $(vsh_existArch ${cmdLineArray[1]}) )); then
		echo "$archNotFound"
		return
	fi

	cat $archivePath
}

read cmdLine
cmdLineArray=(${cmdLine// / })
declare action="${cmdLineArray[0]}"
archivePath="$archivesDir/${cmdLineArray[1]}"

case "$action" in
	list )
		vsh_list;
		;;
	browse )
		vsh_browse;
		;;
	extract )
		vsh_extract;
		;;
	*)
		;;
esac